# coding: utf-8

"""
    UpGuard CyberRisk API

    Access information from the CyberRisk platform programmatically using this API.  You can find or generate an API key to access this API in your CyberRisk Account Settings. Please authorize all requests by setting the \"Authorization\" header to your api key.  The base url for all public endpoints is https://cyber-risk.upguard.com/api/public  # noqa: E501

    OpenAPI spec version: 1.11.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from upguard.configuration import Configuration


class GetDomainDetailsV1RespBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'a_records': 'list[str]',
        'automated_score': 'int',
        'check_results': 'list[CheckResult]',
        'hostname': 'str',
        'labels': 'list[str]',
        'scanned_at': 'datetime',
        'waived_check_results': 'list[CheckResult]'
    }

    attribute_map = {
        'a_records': 'a_records',
        'automated_score': 'automated_score',
        'check_results': 'check_results',
        'hostname': 'hostname',
        'labels': 'labels',
        'scanned_at': 'scanned_at',
        'waived_check_results': 'waived_check_results'
    }

    def __init__(self, a_records=None, automated_score=None, check_results=None, hostname=None, labels=None, scanned_at=None, waived_check_results=None, _configuration=None):  # noqa: E501
        """GetDomainDetailsV1RespBody - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._a_records = None
        self._automated_score = None
        self._check_results = None
        self._hostname = None
        self._labels = None
        self._scanned_at = None
        self._waived_check_results = None
        self.discriminator = None

        if a_records is not None:
            self.a_records = a_records
        if automated_score is not None:
            self.automated_score = automated_score
        if check_results is not None:
            self.check_results = check_results
        if hostname is not None:
            self.hostname = hostname
        if labels is not None:
            self.labels = labels
        if scanned_at is not None:
            self.scanned_at = scanned_at
        if waived_check_results is not None:
            self.waived_check_results = waived_check_results

    @property
    def a_records(self):
        """Gets the a_records of this GetDomainDetailsV1RespBody.  # noqa: E501

        The list of A records associated with the domain. This field will be omitted if no A records were associated with the domain  # noqa: E501

        :return: The a_records of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: list[str]
        """
        return self._a_records

    @a_records.setter
    def a_records(self, a_records):
        """Sets the a_records of this GetDomainDetailsV1RespBody.

        The list of A records associated with the domain. This field will be omitted if no A records were associated with the domain  # noqa: E501

        :param a_records: The a_records of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: list[str]
        """

        self._a_records = a_records

    @property
    def automated_score(self):
        """Gets the automated_score of this GetDomainDetailsV1RespBody.  # noqa: E501

        The score for the domain. If the domain has not been scanned or no score is present this field will be omitted.  # noqa: E501

        :return: The automated_score of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: int
        """
        return self._automated_score

    @automated_score.setter
    def automated_score(self, automated_score):
        """Sets the automated_score of this GetDomainDetailsV1RespBody.

        The score for the domain. If the domain has not been scanned or no score is present this field will be omitted.  # noqa: E501

        :param automated_score: The automated_score of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: int
        """

        self._automated_score = automated_score

    @property
    def check_results(self):
        """Gets the check_results of this GetDomainDetailsV1RespBody.  # noqa: E501

        The results of the domain scan. This field will be omitted if the domain has not been scanned or no results are available.  # noqa: E501

        :return: The check_results of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: list[CheckResult]
        """
        return self._check_results

    @check_results.setter
    def check_results(self, check_results):
        """Sets the check_results of this GetDomainDetailsV1RespBody.

        The results of the domain scan. This field will be omitted if the domain has not been scanned or no results are available.  # noqa: E501

        :param check_results: The check_results of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: list[CheckResult]
        """

        self._check_results = check_results

    @property
    def hostname(self):
        """Gets the hostname of this GetDomainDetailsV1RespBody.  # noqa: E501

        The hostname of the domain  # noqa: E501

        :return: The hostname of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this GetDomainDetailsV1RespBody.

        The hostname of the domain  # noqa: E501

        :param hostname: The hostname of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: str
        """

        self._hostname = hostname

    @property
    def labels(self):
        """Gets the labels of this GetDomainDetailsV1RespBody.  # noqa: E501

        The labels associated with the domain. This field will be omitted if no labels are present.  # noqa: E501

        :return: The labels of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: list[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GetDomainDetailsV1RespBody.

        The labels associated with the domain. This field will be omitted if no labels are present.  # noqa: E501

        :param labels: The labels of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: list[str]
        """

        self._labels = labels

    @property
    def scanned_at(self):
        """Gets the scanned_at of this GetDomainDetailsV1RespBody.  # noqa: E501

        The time the domain was scanned in RFC3339 format  # noqa: E501

        :return: The scanned_at of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: datetime
        """
        return self._scanned_at

    @scanned_at.setter
    def scanned_at(self, scanned_at):
        """Sets the scanned_at of this GetDomainDetailsV1RespBody.

        The time the domain was scanned in RFC3339 format  # noqa: E501

        :param scanned_at: The scanned_at of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: datetime
        """

        self._scanned_at = scanned_at

    @property
    def waived_check_results(self):
        """Gets the waived_check_results of this GetDomainDetailsV1RespBody.  # noqa: E501

        The waived risks for this domain. This field will be omitted if no waived risks are present.  # noqa: E501

        :return: The waived_check_results of this GetDomainDetailsV1RespBody.  # noqa: E501
        :rtype: list[CheckResult]
        """
        return self._waived_check_results

    @waived_check_results.setter
    def waived_check_results(self, waived_check_results):
        """Sets the waived_check_results of this GetDomainDetailsV1RespBody.

        The waived risks for this domain. This field will be omitted if no waived risks are present.  # noqa: E501

        :param waived_check_results: The waived_check_results of this GetDomainDetailsV1RespBody.  # noqa: E501
        :type: list[CheckResult]
        """

        self._waived_check_results = waived_check_results

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetDomainDetailsV1RespBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetDomainDetailsV1RespBody):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetDomainDetailsV1RespBody):
            return True

        return self.to_dict() != other.to_dict()
